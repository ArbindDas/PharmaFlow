spring :
  security :
    oauth2 :
      client :
        registration :
          google :
            client-id : ${GOOGLE_CLIENT_ID}
            client-secret : ${GOOGLE_CLIENT_SECRET}
            scope : email,profile,openid
            redirect-uri : http://localhost:8080/login/oauth2/code/google
            authorization-grant-type : authorization_code
        provider :
          google : {}


  datasource :
    url : ${SPRING_DATASOURCE_URL}
    username : ${SPRING_DATASOURCE_USERNAME}
    password : ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name : com.mysql.cj.jdbc.Driver

  data :
    redis :
      host : ${REDIS_HOST}
      port : ${REDIS_PORT}
      lettuce :
        client :
          options :
            client-name : pharmacy-app
            ping-before-activate-connection : true

  jpa :
    hibernate :
      ddl-auto : update
    show-sql : true
    properties :
      hibernate :
        dialect : org.hibernate.dialect.MySQL8Dialect
        format_sql : true



# Security configuration
security :
  oauth2 :
    resourceserver :
      jwt :
        issuer-uri : https://accounts.google.com

logging :
  level :
    org :
      hibernate :
        SQL : DEBUG
        type :
          descriptor :
            sql :
              BasicBinder : TRACE
      springframework :
        web : DEBUG
        data :
          redis : DEBUG
    root : INFO

jwt :
  secret-key : ${JWT_SECRET}
  refresh-token-expiration : ${JWT_REFRESH_TOKEN_EXPIRATION}
aws :
  accessKeyId : ${AWS_ACCESS_KEY_ID}
  secretKey : ${AWS_SECRET_ACCESS_KEY}
  region : ${AWS_REGION}
  s3 :
    bucket : ${AWS_S3_BUCKET}

  ai :
    ollama :
      base-url : ${SPRING_AI_OLLAMA_BASE_URL}
      model : ${SPRING_AI_OLLAMA_MODEL}
# Stripe configuration
stripe:
  secret:
    key: ${STRIPE_SECRET_KEY}